/*2- Elabore um programa que simule a memória de um computador. O usuário irá especificar o
tamanho da memória, ou seja, quantos bytes serão alocados do tipo inteiro (a memória deve ser
inicializada com todos os dados zerados). Assim, a memória solicitada deve ser um valor
múltiplo do tamanho do tipo inteiro. A seguir, o usuário terá duas possibilidades mediante um
menu: inserir um valor em uma determinada posição ou consultar o valor contido em uma
determinada posição.*/


#include <stdio.h>
#include <stdlib.h>

int main() {
    int tmd;
    printf("Digite um número para o tamanho da memória (em bytes): ");
    scanf("%d", &tmd);

    
    if (tmd <= 0 || tmd % sizeof(int) != 0) {
        printf("O tamanho da memória deve ser um múltiplo do tamanho de um inteiro (%zu bytes).\n", sizeof(int));
        return 1;
    }

    int *ponteiro = calloc(tmd / sizeof(int), sizeof(int));
    if (ponteiro == NULL) {
        printf("Erro na alocação de memória.\n");
        return 1;
    }

    int opcao, posicao, valor;
    do {
        printf("\nMenu:\n");
        printf("1. Inserir valor em uma posição\n");
        printf("2. Consultar valor em uma posição\n");
        printf("3. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                printf("Digite a posição (0 a %d): ", (tmd / sizeof(int)) - 1);
                scanf("%d", &posicao);
                if (posicao < 0 || posicao >= (tmd / sizeof(int))) {
                    printf("Posição inválida.\n");
                } else {
                    printf("Digite o valor a ser inserido: ");
                    scanf("%d", &valor);
                    ponteiro[posicao] = valor;
                }
                break;

            case 2:
                printf("Digite a posição (0 a %d): ", (tmd / sizeof(int)) - 1);
                scanf("%d", &posicao);
                if (posicao < 0 || posicao >= (tmd / sizeof(int))) {
                    printf("Posição inválida.\n");
                } else {
                    printf("Valor na posição %d: %d\n", posicao, ponteiro[posicao]);
                }
                break;

            case 3:
                printf("Saindo...\n");
                break;

            default:
                printf("Opção inválida. Tente novamente.\n");
                break;
        }
    } while (opcao != 3);

    free(ponteiro);
    
    return 0;
}
