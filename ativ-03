/*3- Desenvolva um programa que armazene na memória dois vetores do tipo inteiro contendo 1000
posições cada um. O primeiro deve ser criado utilizando MALLOC, e o segundo utilizando
CALLOC. Após isso, percorra os vetores com uma função que retorne a quantidade de zeros
existentes em cada um deles.*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int contarZeros(int *vetor, int tamanho) {
    int contagem = 0;
    for (int i = 0; i < tamanho; i++) {
        if (vetor[i] == 0) {
            contagem++;
        }
    }
    return contagem;
}

int main() {
    int tamanho = 1000;

    //1 vetor malloc
    int *vetor1 = (int *)malloc(tamanho * sizeof(int));
    if (vetor1 == NULL) {
        printf("Erro ao alocar memória com malloc.\n");
        return 1;
    }

    // 2 vetor calloc
    int *vetor2 = (int *)calloc(tamanho, sizeof(int));
    if (vetor2 == NULL) {
        printf("Erro ao alocar memória com calloc.\n");
        free(vetor1);  
        return 1;
    }

     srand(time(NULL));
      for (int i = 0; i < tamanho; i++) {
        vetor1[i] = rand() % 11; 
    }

    
    for (int i = 0; i < tamanho; i++) {
        vetor2[i] = rand() % 11; 
    
    for (int i = 0; i < tamanho; i++) {
        vetor1[i] = rand() % 11; 
    }

   
    int zerosVetor1 = contarZeros(vetor1, tamanho);
    int zerosVetor2 = contarZeros(vetor2, tamanho);

  
    printf("Quantidade de zeros no vetor1: %d\n", zerosVetor1);
    printf("Quantidade de zeros no vetor2: %d\n", zerosVetor2);

  
    free(vetor1);
    free(vetor2);

    return 0;
}
}
